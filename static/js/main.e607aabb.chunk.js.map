{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid19.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Countries","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e607aabb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3UOHH\",\"card\":\"Cards_card__3i9Y_\",\"infected\":\"Cards_infected__XZDvP\",\"recovered\":\"Cards_recovered__25fa-\",\"deaths\":\"Cards_deaths__3OI-N\"};","import React from 'react';\r\nimport {Card , CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }}) =>{\r\n    if (!confirmed){\r\n        return 'Loading ...';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n           <Grid container spacing ={3} justify=\"center\">\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                       <Typography variant=\"h5\">\r\n                           <CountUp start={0} end= {confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                       <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of confirmed cases of COVID-19</Typography>\r\n                  </CardContent>\r\n               </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                       <Typography variant=\"h5\">\r\n                       <CountUp start={0} end= {recovered.value} duration={2.5} separator=\",\" />\r\n                       </Typography>\r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                  </CardContent>\r\n               </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                       <Typography variant=\"h5\">\r\n                       <CountUp start={0} end= {deaths.value} duration={2.5} separator=\",\" />\r\n                       </Typography>\r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                  </CardContent>\r\n               </Grid>\r\n           </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url =\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl =url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}` \r\n    }\r\n\r\n    try{\r\n        const {data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\r\n\r\n        return  { confirmed,recovered, deaths,lastUpdate };\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n\r\n    }catch (error){\r\n    return error;\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: {countries} } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data: { confirmed, deaths, recovered}, country}) =>{\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart =(\r\n        dailyData.length\r\n         ? (\r\n        <Line\r\n        data ={{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({ confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n            },{\r\n                data: dailyData.map(({ deaths}) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',               \r\n                backgroundColor: 'rgba(255,0,0,0.5',\r\n                fill: true,\r\n            },],\r\n        }}\r\n        />) : null\r\n    );\r\n\r\n\r\n    const barChart =(\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n            data={{\r\n            labels: ['Infected','Recovered','Deaths'],\r\n            datasets: [{\r\n                label: 'People',\r\n                backgroundColor:['rgba(0,0,255, 0.5)','rgba(0,255,0, 0.5)','rgba(255,0,0, 0.5)',],\r\n                data:[confirmed.value , recovered.value, deaths.value],\r\n            },],\r\n            }}\r\n            options={{\r\n                legend : {display:false},\r\n                title: {display: true , text: `Current state in ${country}`},\r\n            }} \r\n            />\r\n        ): null\r\n    );\r\n    return(\r\n        <div className={styles.container}>\r\n        {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect , FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst Countries = ({handleCountryChange}) =>{\r\n\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n        setCountries(await fetchCountries());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) =>{\r\n            handleCountryChange(e.target.value)\r\n            }}>\r\n                <option value=\"\">Global</option>\r\n    {countries.map((country,i) => <option key= {i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default Countries;","import React from 'react';\nimport { Cards, Chart , CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport coronaImage from './images/covid19.png';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    \n    this.setState({ data:fetchedData});\n    }\n  \n     handleCountryChange = async (country) => {\n      const fetchedData = await fetchData(country);\n      \n      this.setState({ data:fetchedData , country : country});\n\n    }\n\n  render(){\n\n    const {data, country} = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n        <Cards data={data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Chart data={data} country={country}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n      ,document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Yloy\",\"image\":\"App_image__1bP1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1RAdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2do7O\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.e55c3290.png\";"],"sourceRoot":""}